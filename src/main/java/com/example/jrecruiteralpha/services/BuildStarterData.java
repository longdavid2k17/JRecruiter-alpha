package com.example.jrecruiteralpha.services;

import com.example.jrecruiteralpha.models.Company;
import com.example.jrecruiteralpha.models.JobOffer;
import com.example.jrecruiteralpha.repositories.CompanyRepository;
import com.example.jrecruiteralpha.repositories.JobOfferRepository;
import org.springframework.boot.context.event.ApplicationReadyEvent;
import org.springframework.context.event.EventListener;
import org.springframework.stereotype.Service;

import javax.transaction.Transactional;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Random;

@Service
public class BuildStarterData
{
    private final JobOfferRepository jobOfferRepository;
    private final CompanyRepository companyRepository;

    private final List<String> jobNamesList;
    private final List<String> contractTypeList;
    private final List<Company> companies;

    public BuildStarterData(JobOfferRepository jobOfferRepository,CompanyRepository companyRepository)
    {
        this.jobOfferRepository = jobOfferRepository;
        this.companyRepository = companyRepository;

        jobNamesList = new ArrayList<>();
        jobNamesList.add("Programista JAVA");
        jobNamesList.add("Programista .NET");
        jobNamesList.add("Programista Python");
        jobNamesList.add("Programista C");
        jobNamesList.add("Programista C++");
        jobNamesList.add("Fullstack JAVA Developer");
        jobNamesList.add("Fullstack Python Developer");
        jobNamesList.add("Fullstack C Developer");
        jobNamesList.add("Fullstack C++ Developer");
        jobNamesList.add("Fullstack .NET Developer");
        jobNamesList.add("Frontend developer - Angular");
        jobNamesList.add("Frontend developer - React");
        jobNamesList.add("Frontend developer - Node JS");
        jobNamesList.add("Junior Database engineer");
        jobNamesList.add("Senior Database engineer");
        jobNamesList.add("Regular Database engineer");
        jobNamesList.add("Project manager");

        contractTypeList = new ArrayList<>();
        contractTypeList.add("Umowa o pracę");
        contractTypeList.add("Umowa zlecenie");
        contractTypeList.add("Umowa o dzieło");
        contractTypeList.add("Staż");

        companies = getCompanyRepository().findAll();
    }

    @EventListener(ApplicationReadyEvent.class)
    @Transactional
    public void insertStarterData()
    {
        Random random = new Random();
        JobOffer jobOffer1 = new JobOffer();
        jobOffer1.setPositionTitle(getJobNamesList().get(random.nextInt(getJobNamesList().size())));
        jobOffer1.setContractType(getContractTypeList().get(random.nextInt(getContractTypeList().size())));
        jobOffer1.setCreationDate(new Date());
        jobOffer1.setPositionDescription("This is default offer description, generated by service. Nothing here is with sense till edition.");
        jobOffer1.setLowEndPaymentRange(2500d+random.nextInt(2000));
        jobOffer1.setHighEndPaymentRange(4500d+random.nextInt(4500));
        jobOffer1.setCompany(getCompanies().get(random.nextInt(getCompanies().size())));

        jobOfferRepository.save(jobOffer1);
    }

    public CompanyRepository getCompanyRepository()
    {
        return companyRepository;
    }

    public List<String> getJobNamesList()
    {
        return jobNamesList;
    }

    public List<Company> getCompanies()
    {
        return companies;
    }

    public List<String> getContractTypeList()
    {
        return contractTypeList;
    }
}
